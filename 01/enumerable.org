#+TITLE:     Módulo Enumerable
#+AUTHOR:    Federico M. Iachetti
#+EMAIL:     fedex@lily
#+DATE:      2012-06-11 lun
#+LANGUAGE:  es
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:info toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+STARTUP: showeverything


* Enumerable

  Si tenemos una clase que implementa el método each(&block), al incluir
  en ella el módulo enumerable, éste nos brinda una serie de métodos que
  lo utilizan para realizar distintas acciones sobre una colección.

  A continuación una lista de dichos métodos:
  
** all?
   Pasa cada uno de los elementos al bloque. El método devuelve
   verdadero si el bloque nunca retorna false o nil y falso si alguno
   bloque devuelve false o nil en alguna de las iterciones.
   
   El bloque es opcional y si no se provee, el método aporta un
   bloque:

#+BEGIN_SRC ruby
   [...].all? {|o| o}
#+END_SRC
** all?
** any?
   Pasa cada uno de los valores al bloque. Devuelve verdadero si el
   bloque devuelve algo que no sea false o nil en alguna de sus
   iteraciones.

   Al igual que all?, el bloque es opcional y se provee un bloque por
   defecto.

** chunk
   
** collect, map
** collect_concat, flat_map
** count
** cycle
** detect, find
** drop
** drop_while
** each_cons
** each_entry
** each_slice
** each_with_index
** each_with_object
** entries, to_a
** find_all, select
** find_index
** first
** grep
** group_by
** include?, member?
** inject, reduce
** max
** max_by
** min
** min_by
** minmax
** minmax_by
** none?
** one?
** partition
** reject
** reverse_each
** slice_before
** sort
** sort_by
** take
** take_while
** zip 



* Actividad

  Escribir un módulo que utilice el método each para definir cada uno
  de los métodos explicados anteriormente
